#!/bin/bash

script=$(basename "${BASH_SOURCE[0]}")

new_usage() {
  cat <<EOF
Usage: $script new [-h] [NAME]

Creates a new note in $ZK_PATH with the given NAME and a prefix.

Available options:

  -h, --help      Print this help and exit
EOF
  exit
}

new() {
  while :; do
    case "${1-}" in
    -h | --help) new_usage ;;
    -?*) echo "Unknown option: $1" && exit ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")
  if [[ -z $args ]]; then
    new_usage
    exit
  else
    file="$(date +"%Y%m%d%H%M")_$args.md"
    nvim "$file"
  fi
}

search_usage() {
  cat <<EOF
Usage: $script search [-h] [EXPR]

Search for notes in $ZK_PATH containing the given EXPR.

Available options:

  -h, --help      Print this help and exit
EOF
  exit
}

search() {
  while :; do
    case "${1-}" in
    -h | --help) search_usage ;;
    -?*) echo "Unknown option: $1" && exit ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")
  if [[ -z $args ]]; then
    nvim -c "RG"
  else
    nvim -c "RG $args"
  fi
}

push_usage() {
  cat <<EOF
Usage: $script push [-h]

Pushes all new notes in $ZK_PATH to the remote repository.

Available options:

  -h, --help      Print this help and exit
EOF
  exit
}

push() {
  while :; do
    case "${1-}" in
    -h | --help) push_usage ;;
    -?*) echo "Unknown option: $1" && exit ;;
    *) break ;;
    esac
    shift
  done

  git add .

  args=("$@")
  if [[ -z $args ]]; then
    git commit -m "Saving new notes"
  else
    git commit -m "$args"
  fi

  git push
}

usage() {
  cat <<EOF
Usage: $script [-h] <command> <args>

Script description here.

Available options:

  -h, --help      Print this help and exit

Available commands:

  new             Create a new note
  push            Push changes to the upstream repository
  search          Search for notes

EOF
  exit
}

main() {
  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -?*) echo "Unknown option: $1" && exit ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")
  [[ ${#args[@]} -eq 0 ]] && usage && exit

  cd $ZK_PATH
  command=${1-}
  shift

  case "$command" in
    new) new $@ ;;
    push) push ;;
    search) search $@ ;;
    *) echo "Unknown command: $command" && exit ;;
  esac

  return 0
}

main "$@"
