#!/bin/bash

command=$(basename $0)

function zk_new_help {
    echo "usage: $command new <name>"
    echo "Create a new note in $ZK_PATH with the given name and arbitrary prefix"
    echo ""
}

function zk_new {
    case $@ in
        "" | "-h" | "--help")
            zk_new_help
            ;;
        -*)
            echo "unknown option: $1"
            zk_new_help
            ;;
        *)
            file="$ZK_PATH/$(date +"%Y%m%d%H%M")_$@.md"

            if [[ -z $ZK_EDITOR ]]; then
                nvim -c ":set autochdir" "$file"
            else
                $ZK_EDITOR "$file"
            fi
            ;;
    esac
}

function zk_search_help {
    echo "usage: $command search <pattern> [<grep args>]" >&2
    echo "Search for a given pattern through the notes in $ZK_PATH" >&2
}

function zk_search {
    case $@ in
        "" | "-h" | "--help")
            zk_search_help
            ;;
        -*)
            echo "unknown option: $1"
            zk_search_help
            ;;
        *)
            grep $@ -r $ZK_PATH --color=auto --exclude-dir=.git
            ;;
    esac
}

function zk_help {
    echo "usage: $command <command> [options]"
    echo "commands:"
    echo "    new      Create a new note in $ZK_PATH"
    echo "    search   Search through the files in $ZK_PATH"
}

function zk {
    subcommand=$1
    case $subcommand in
        "" | "-h" | "--help")
            zk_help
            ;;
        *)
            shift
            if type zk_${subcommand} &>/dev/null; then
                zk_${subcommand} $@
            else
                echo "Error: '$subcommand' is not a known command." >&2
                echo "       Run '$command --help' for a list of known commands." >&2
                exit 1
            fi
            ;;
    esac
}

zk $@
